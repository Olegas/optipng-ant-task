<?xml version="1.0" encoding="UTF-8"?>

<project name="optipng-ant-task" default="all">

	<target name="-init" description="Common initialization">
		<property name="sourcedir"           value="src" />
		<property name="outputdir"           value="build" />
		<property name="javac.deprecation"   value="true"   />
		<property name="javac.compilerargs"  value="-Xlint" />
		<property name="javac.listfiles"     value="true"   />
		<property name="javac.encoding"      value="utf-8" />
		<property name="javac.targetvm"      value="1.5"   />
		<property name="javac.debug"         value="true"  />
		<property name="javac.optimize"      value="false" />
		<property name="javac.sourcedir"     value="${sourcedir}" />
		<property name="javac.outputdir"     value="${outputdir}/classes" />
		<property name="javac.includes"      value="**/*.java" />
		<property name="jar.filename"        value="${outputdir}/${ant.project.name}.jar" />
		<property name="project.description" value="OptiPNG Ant task" />
		<property name="project.vendor"      value="PensioenPage B.V." />
		<loadfile property="project.version" srcfile="VERSION">
			<filterchain>
				<striplinebreaks/>
			</filterchain>
		</loadfile>
		<property name="unittests.sourcedir" value="${sourcedir}/testcases" />
		<property name="unittests.outputdir" value="${outputdir}/testcases" />

		<echo level="verbose" message="Project: ${ant.project.name} (&quot;${project.description}&quot;) version ${project.version}" />
	</target>

	<target name="compile" depends="-init">
		<mkdir dir="${javac.outputdir}" />

		<javac encoding="${javac.encoding}"
		        destdir="${javac.outputdir}"
		          debug="${javac.debug}"
		    deprecation="${javac.deprecation}"
		       optimize="${javac.optimize}"
		         target="${javac.targetvm}"
		       includes="${javac.includes}"
		      listfiles="${javac.listfiles}">
			<compilerarg value="${javac.compilerargs}" />
			<src path="src" />
		</javac>
	</target>

	<target name="unittests" depends="compile" description="Compiles and runs all unit tests">

		<taskdef name="optipng" classname="com.pensioenpage.jynx.optipng.OptiPNGTask" classpath="${javac.outputdir}" />

		<mkdir dir="${unittests.outputdir}" />
		<optipng dir="${unittests.sourcedir}/input/" todir="${unittests.outputdir}" />

		<property name="unittests.filename"      value="1.png"                                                 />
		<property name="unittests.input.file"    value="${unittests.sourcedir}/input/${unittests.filename}"    />
		<property name="unittests.expected.file" value="${unittests.sourcedir}/expected/${unittests.filename}" />
		<property name="unittests.actual.file"   value="${unittests.outputdir}/${unittests.filename}"          />

		<condition property="unittests.success">
			<filesmatch file1="${unittests.expected.file}" file2="${unittests.actual.file}" />
		</condition>
		<fail unless="unittests.success">
			Expected output (in ${unittests.expected.file})
			differs from actual output (in ${unittests.actual.file}).
		</fail>
	</target>

	<target name="jar" depends="compile">
		<jar jarfile="${jar.filename}" basedir="${javac.outputdir}">
			<manifest>
				<attribute name="Specification-Title"   value="${project.description}"/>
				<attribute name="Specification-Version" value="${project.version}"/>
				<attribute name="Specification-Vendor"  value="${project.vendor}"/>
				<attribute name="Implementation-Title"   value="${project.description}"/>
				<attribute name="Implementation-Version" value="${project.version}"/>
				<attribute name="Implementation-Vendor"  value="${project.vendor}"/>
			</manifest>
		</jar>
	</target>

	<target name="all" depends="compile,unittests,jar" description="Compiles, runs all unit tests and builds the JAR" />

	<target name="clean" depends="-init">
		<delete dir="${outputdir}" />
	</target>
</project>
